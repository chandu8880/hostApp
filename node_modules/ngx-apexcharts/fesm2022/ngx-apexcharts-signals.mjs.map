{"version":3,"file":"ngx-apexcharts-signals.mjs","sources":["../../../projects/ngx-apexcharts/signals/ngx-apexchart.component.ts","../../../projects/ngx-apexcharts/signals/ngx-apexcharts.directive.ts","../../../projects/ngx-apexcharts/signals/ngx-apexcharts.module.ts","../../../projects/ngx-apexcharts/signals/ngx-apexcharts-signals.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  Component,\n  ElementRef,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  inject,\n  input,\n  viewChild,\n  afterNextRender,\n  afterEveryRender,\n  DestroyRef,\n  signal,\n} from \"@angular/core\";\nimport {\n  ApexAnnotations,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexFill,\n  ApexGrid,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexMarkers,\n  ApexNoData,\n  ApexPlotOptions,\n  ApexResponsive,\n  ApexStates,\n  ApexStroke,\n  ApexTheme,\n  ApexTitleSubtitle,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis,\n  ApexForecastDataPoints,\n  ApexOptions,\n} from \"./apex-types\";\n\nimport type ApexCharts from \"apexcharts\";\n\ndeclare global {\n  interface Window {\n    ApexCharts: any;\n  }\n}\n\n@Component({\n  selector: \"apx-chart\",\n  template: \"<div #chart></div>\",\n  exportAs: \"apexChat\",\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChartComponent implements OnDestroy {\n  public chart = input<ApexChart>();\n\n  public annotations = input<ApexAnnotations>();\n\n  public colors = input<any[]>();\n\n  public dataLabels = input<ApexDataLabels>();\n\n  public series = input<ApexAxisChartSeries | ApexNonAxisChartSeries>();\n\n  public stroke = input<ApexStroke>();\n\n  public labels = input<string[]>();\n\n  public legend = input<ApexLegend>();\n\n  public markers = input<ApexMarkers>();\n\n  public noData = input<ApexNoData>();\n\n  public fill = input<ApexFill>();\n\n  public tooltip = input<ApexTooltip>();\n\n  public plotOptions = input<ApexPlotOptions>();\n\n  public responsive = input<ApexResponsive[]>();\n\n  public xaxis = input<ApexXAxis>();\n\n  public yaxis = input<ApexYAxis | ApexYAxis[]>();\n\n  public forecastDataPoints = input<ApexForecastDataPoints>();\n\n  public grid = input<ApexGrid>();\n\n  public states = input<ApexStates>();\n\n  public title = input<ApexTitleSubtitle>();\n\n  public subtitle = input<ApexTitleSubtitle>();\n\n  public theme = input<ApexTheme>();\n\n  public autoUpdateSeries = input<boolean>(true);\n\n  public readonly chartElement = viewChild.required<ElementRef>(\"chart\");\n\n  private chartObj?: ApexCharts;\n  private hasPendingLoad = signal<boolean>(false);\n\n  constructor() {\n    afterNextRender(async () => {\n      this.hasPendingLoad.set(true);\n      const ApexCharts = (await import(\"apexcharts\")).default;\n      const options = this.buildOptions();\n      this.chartObj = new ApexCharts(\n        this.chartElement().nativeElement,\n        options,\n      );\n      window.ApexCharts = ApexCharts;\n      await this.render();\n      this.hasPendingLoad.set(true);\n    });\n    afterEveryRender(async () => {\n      if (this.hasPendingLoad() === true) {\n        return;\n      }\n      this.hasPendingLoad.set(true);\n      this.chartObj?.destroy();\n      const ApexCharts = (await import(\"apexcharts\")).default;\n      const options = this.buildOptions();\n      this.chartObj = new ApexCharts(\n        this.chartElement().nativeElement,\n        options,\n      );\n      await this.render();\n      this.hasPendingLoad.set(false);\n    });\n\n    const destroyRef = inject(DestroyRef);\n    destroyRef.onDestroy(() => this.chartObj?.destroy());\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  render(): Promise<void> | undefined {\n    return this.chartObj?.render();\n  }\n\n  updateOptions(\n    options: any,\n    redrawPaths?: boolean,\n    animate?: boolean,\n    updateSyncedCharts?: boolean,\n  ): Promise<void> | undefined {\n    return this.chartObj?.updateOptions(\n      options,\n      redrawPaths,\n      animate,\n      updateSyncedCharts,\n    );\n  }\n\n  updateSeries(\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\n    animate?: boolean,\n  ): Promise<void> | undefined {\n    return this.chartObj?.updateSeries(newSeries, animate);\n  }\n\n  appendSeries(\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\n    animate?: boolean,\n  ): void {\n    this.chartObj?.appendSeries(newSeries, animate);\n  }\n\n  appendData(newData: any[]): void {\n    this.chartObj?.appendData(newData);\n  }\n\n  toggleSeries(seriesName: string): Promise<void> {\n    return this.chartObj?.toggleSeries(seriesName);\n  }\n\n  showSeries(seriesName: string): void {\n    this.chartObj?.showSeries(seriesName);\n  }\n\n  hideSeries(seriesName: string): void {\n    this.chartObj?.hideSeries(seriesName);\n  }\n\n  resetSeries(): void {\n    this.chartObj?.resetSeries();\n  }\n\n  zoomX(min: number, max: number): void {\n    this.chartObj?.zoomX(min, max);\n  }\n\n  toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number): void {\n    this.chartObj?.toggleDataPointSelection(seriesIndex, dataPointIndex);\n  }\n\n  destroy(): void {\n    this.chartObj?.destroy();\n  }\n\n  setLocale(localeName: string): void {\n    this.chartObj?.setLocale(localeName);\n  }\n\n  paper(): void {\n    this.chartObj?.paper();\n  }\n\n  addXaxisAnnotation(\n    options: any,\n    pushToMemory?: boolean,\n    context?: any,\n  ): void {\n    this.chartObj?.addXaxisAnnotation(options, pushToMemory, context);\n  }\n\n  addYaxisAnnotation(\n    options: any,\n    pushToMemory?: boolean,\n    context?: any,\n  ): void {\n    this.chartObj?.addYaxisAnnotation(options, pushToMemory, context);\n  }\n\n  addPointAnnotation(\n    options: any,\n    pushToMemory?: boolean,\n    context?: any,\n  ): void {\n    this.chartObj?.addPointAnnotation(options, pushToMemory, context);\n  }\n\n  removeAnnotation(id: string, options?: any): void {\n    this.chartObj?.removeAnnotation(id, options);\n  }\n\n  clearAnnotations(options?: any): void {\n    this.chartObj?.clearAnnotations(options);\n  }\n\n  dataURI(\n    options?: any,\n  ): Promise<{ imgURI: string } | { blob: Blob }> | undefined {\n    return this.chartObj?.dataURI(options);\n  }\n\n  private buildOptions(): ApexOptions {\n    const options: ApexOptions = {};\n\n    if (this.annotations()) {\n      options.annotations = this.annotations();\n    }\n    if (this.chart()) {\n      options.chart = this.chart();\n    }\n    if (this.colors()) {\n      options.colors = this.colors();\n    }\n    if (this.dataLabels()) {\n      options.dataLabels = this.dataLabels();\n    }\n    if (this.series()) {\n      options.series = this.series();\n    }\n    if (this.stroke()) {\n      options.stroke = this.stroke();\n    }\n    if (this.labels()) {\n      options.labels = this.labels();\n    }\n    if (this.legend()) {\n      options.legend = this.legend();\n    }\n    if (this.fill()) {\n      options.fill = this.fill();\n    }\n    if (this.tooltip()) {\n      options.tooltip = this.tooltip();\n    }\n    if (this.plotOptions()) {\n      options.plotOptions = this.plotOptions();\n    }\n    if (this.responsive()) {\n      options.responsive = this.responsive();\n    }\n    if (this.markers()) {\n      options.markers = this.markers();\n    }\n    if (this.noData()) {\n      options.noData = this.noData();\n    }\n    if (this.xaxis()) {\n      options.xaxis = this.xaxis();\n    }\n    if (this.yaxis()) {\n      options.yaxis = this.yaxis();\n    }\n    if (this.forecastDataPoints()) {\n      options.forecastDataPoints = this.forecastDataPoints();\n    }\n    if (this.grid()) {\n      options.grid = this.grid();\n    }\n    if (this.states()) {\n      options.states = this.states();\n    }\n    if (this.title()) {\n      options.title = this.title();\n    }\n    if (this.subtitle()) {\n      options.subtitle = this.subtitle();\n    }\n    if (this.theme()) {\n      options.theme = this.theme();\n    }\n\n    return options;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  DestroyRef,\n  Directive,\n  ElementRef,\n  afterNextRender,\n  afterEveryRender,\n  inject,\n  input,\n  signal,\n} from \"@angular/core\";\nimport {\n  ApexAnnotations,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexFill,\n  ApexGrid,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexMarkers,\n  ApexNoData,\n  ApexPlotOptions,\n  ApexResponsive,\n  ApexStates,\n  ApexStroke,\n  ApexTheme,\n  ApexTitleSubtitle,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis,\n  ApexForecastDataPoints,\n  ApexOptions,\n} from \"./apex-types\";\n\nimport type ApexCharts from \"apexcharts\";\n\n@Directive({\n  selector: \"[apxChart]\",\n  standalone: true,\n  exportAs: \"apxChart\",\n})\nexport class NgxApexchartsDirective {\n  public chart = input<ApexChart>();\n\n  public annotations = input<ApexAnnotations>();\n\n  public colors = input<any[]>();\n\n  public dataLabels = input<ApexDataLabels>();\n\n  public series = input<ApexAxisChartSeries | ApexNonAxisChartSeries>();\n\n  public stroke = input<ApexStroke>();\n\n  public labels = input<string[]>();\n\n  public legend = input<ApexLegend>();\n\n  public markers = input<ApexMarkers>();\n\n  public noData = input<ApexNoData>();\n\n  public fill = input<ApexFill>();\n\n  public tooltip = input<ApexTooltip>();\n\n  public plotOptions = input<ApexPlotOptions>();\n\n  public responsive = input<ApexResponsive[]>();\n\n  public xaxis = input<ApexXAxis>();\n\n  public yaxis = input<ApexYAxis | ApexYAxis[]>();\n\n  public forecastDataPoints = input<ApexForecastDataPoints>();\n\n  public grid = input<ApexGrid>();\n\n  public states = input<ApexStates>();\n\n  public title = input<ApexTitleSubtitle>();\n\n  public subtitle = input<ApexTitleSubtitle>();\n\n  public theme = input<ApexTheme>();\n\n  public autoUpdateSeries = input<boolean>(true);\n\n  private chartObj?: ApexCharts;\n  private hasPendingLoad = signal<boolean>(false);\n  private destroyRef = inject(DestroyRef);\n\n  constructor(private el: ElementRef) {\n    afterNextRender(async () => {\n      this.hasPendingLoad.set(true);\n      const ApexCharts = (await import(\"apexcharts\")).default;\n      const options = this.buildOptions();\n      this.chartObj = new ApexCharts(this.el.nativeElement, options);\n      window.ApexCharts = ApexCharts;\n      await this.render();\n      this.hasPendingLoad.set(false);\n    });\n\n    afterEveryRender(async () => {\n      if (this.hasPendingLoad()) {\n        return;\n      }\n      this.hasPendingLoad.set(true);\n      this.chartObj?.destroy();\n      const ApexCharts = (await import(\"apexcharts\")).default;\n      const options = this.buildOptions();\n      this.chartObj = new ApexCharts(this.el.nativeElement, options);\n      await this.render();\n      this.hasPendingLoad.set(false);\n    });\n\n    this.destroyRef.onDestroy(() => {\n      this.chartObj?.destroy();\n    });\n  }\n\n  render(): Promise<void> {\n    if (this.chartObj) {\n      return this.chartObj.render();\n    }\n    return Promise.resolve();\n  }\n\n  updateOptions(\n    options: any,\n    redrawPaths?: boolean,\n    animate?: boolean,\n    updateSyncedCharts?: boolean,\n  ): Promise<void> | undefined {\n    return this.chartObj?.updateOptions(\n      options,\n      redrawPaths,\n      animate,\n      updateSyncedCharts,\n    );\n  }\n\n  updateSeries(\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\n    animate?: boolean,\n  ): Promise<void> | undefined {\n    return this.chartObj?.updateSeries(newSeries, animate);\n  }\n\n  appendSeries(\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\n    animate?: boolean,\n  ): void {\n    this.chartObj?.appendSeries(newSeries, animate);\n  }\n\n  appendData(newData: any[]): void {\n    this.chartObj?.appendData(newData);\n  }\n\n  toggleSeries(seriesName: string): Promise<void> {\n    return this.chartObj?.toggleSeries(seriesName);\n  }\n\n  showSeries(seriesName: string): void {\n    this.chartObj?.showSeries(seriesName);\n  }\n\n  hideSeries(seriesName: string): void {\n    this.chartObj?.hideSeries(seriesName);\n  }\n\n  resetSeries(): void {\n    this.chartObj?.resetSeries();\n  }\n\n  zoomX(min: number, max: number): void {\n    this.chartObj?.zoomX(min, max);\n  }\n\n  toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number): void {\n    this.chartObj?.toggleDataPointSelection(seriesIndex, dataPointIndex);\n  }\n\n  destroy(): void {\n    this.chartObj?.destroy();\n  }\n\n  setLocale(localeName: string): void {\n    this.chartObj?.setLocale(localeName);\n  }\n\n  paper(): void {\n    this.chartObj?.paper();\n  }\n\n  addXaxisAnnotation(\n    options: any,\n    pushToMemory?: boolean,\n    context?: any,\n  ): void {\n    this.chartObj?.addXaxisAnnotation(options, pushToMemory, context);\n  }\n\n  addYaxisAnnotation(\n    options: any,\n    pushToMemory?: boolean,\n    context?: any,\n  ): void {\n    this.chartObj?.addYaxisAnnotation(options, pushToMemory, context);\n  }\n\n  addPointAnnotation(\n    options: any,\n    pushToMemory?: boolean,\n    context?: any,\n  ): void {\n    this.chartObj?.addPointAnnotation(options, pushToMemory, context);\n  }\n\n  removeAnnotation(id: string, options?: any): void {\n    this.chartObj?.removeAnnotation(id, options);\n  }\n\n  clearAnnotations(options?: any): void {\n    this.chartObj?.clearAnnotations(options);\n  }\n\n  dataURI(\n    options?: any,\n  ): Promise<{ imgURI: string } | { blob: Blob }> | undefined {\n    return this.chartObj?.dataURI(options);\n  }\n\n  private buildOptions(): ApexOptions {\n    const options: ApexOptions = {};\n\n    if (this.annotations()) {\n      options.annotations = this.annotations();\n    }\n    if (this.chart()) {\n      options.chart = this.chart();\n    }\n    if (this.colors()) {\n      options.colors = this.colors();\n    }\n    if (this.dataLabels()) {\n      options.dataLabels = this.dataLabels();\n    }\n    if (this.series()) {\n      options.series = this.series();\n    }\n    if (this.stroke()) {\n      options.stroke = this.stroke();\n    }\n    if (this.labels()) {\n      options.labels = this.labels();\n    }\n    if (this.legend()) {\n      options.legend = this.legend();\n    }\n    if (this.fill()) {\n      options.fill = this.fill();\n    }\n    if (this.tooltip()) {\n      options.tooltip = this.tooltip();\n    }\n    if (this.plotOptions()) {\n      options.plotOptions = this.plotOptions();\n    }\n    if (this.responsive()) {\n      options.responsive = this.responsive();\n    }\n    if (this.markers()) {\n      options.markers = this.markers();\n    }\n    if (this.noData()) {\n      options.noData = this.noData();\n    }\n    if (this.xaxis()) {\n      options.xaxis = this.xaxis();\n    }\n    if (this.yaxis()) {\n      options.yaxis = this.yaxis();\n    }\n    if (this.forecastDataPoints()) {\n      options.forecastDataPoints = this.forecastDataPoints();\n    }\n    if (this.grid()) {\n      options.grid = this.grid();\n    }\n    if (this.states()) {\n      options.states = this.states();\n    }\n    if (this.title()) {\n      options.title = this.title();\n    }\n    if (this.subtitle()) {\n      options.subtitle = this.subtitle();\n    }\n    if (this.theme()) {\n      options.theme = this.theme();\n    }\n\n    return options;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartComponent } from './ngx-apexchart.component';\nimport { NgxApexchartsDirective } from './ngx-apexcharts.directive';\n\n@NgModule({\n  imports: [ChartComponent, NgxApexchartsDirective],\n  exports: [ChartComponent, NgxApexchartsDirective],\n})\nexport class NgxApexchartsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}